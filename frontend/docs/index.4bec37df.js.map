{"mappings":"ACAA,IAAI,EAAc,EACd,EAAa,GAEjB,eAAe,IACX,GAAI,CACA,IAAM,EAAW,MAAM,MAAM,oCAC7B,GAAI,CAAC,EAAS,EAAA,CACV,MAAM,AAAI,MAAM,CAAC,oBAAoB,EAAE,EAAS,MAAA,CAAO,CAAC,EAG5D,IAAM,EAAO,MAAM,EAAS,IAA5B,GACM,EAAgB,SAAS,cAAA,CAAe,gBAC9C,CAAA,EAAc,SAAA,CAAY,GAE1B,EAAK,OAAA,CAAQ,AAAA,IACT,IAAM,EAAK,SAAS,aAAA,CAAc,KAClC,CAAA,EAAG,WAAA,CAAc,CAAC,EAAE,EAAM,IAAA,CAAK,EAAE,EAAE,EAAM,KAAA,CAAM,CAAC,CAChD,EAAc,WAAA,CAAY,EAC9B,EACJ,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAA,CAAM,6BAA8B,EAChD,CACJ,CA8CA,eAAe,EAAc,CAAI,CAAE,CAAK,EACpC,GAAI,CACA,IAAM,EAAW,MAAM,MAAM,mCAAoC,CAC7D,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAA,CAAU,CACjB,KAAM,EACN,MAAO,CACX,EACJ,GAEA,GAAI,CAAC,EAAS,EAAA,CACV,MAAM,AAAI,MAAM,CAAC,oBAAoB,EAAE,EAAS,MAAA,CAAO,CAAC,EAG5D,OAAO,MAAM,EAAS,IAAtB,EACJ,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAA,CAAM,0BAA2B,EAC7C,CACJ,CAjEA,SAAS,cAAA,CAAe,gBAAgB,gBAAA,CAAiB,QAAS,UAE1D,AAAsB,KAAtB,AADJ,CAAA,EAAa,SAAS,cAAA,CAAe,cAAc,KAAnD,AAAA,EACe,IAAA,IACX,SAAS,cAAA,CAAe,qBAAqB,WAAA,CAAc,EAC3D,SAAS,cAAA,CAAe,gBAAgB,KAAA,CAAM,OAAA,CAAU,OACxD,SAAS,cAAA,CAAe,cAAc,KAAA,CAAM,OAAA,CAAU,OACtD,SAAS,cAAA,CAAe,iBAAiB,KAAA,CAAM,OAAA,CAAU,QACzD,SAAS,cAAA,CAAe,gBAAgB,KAAA,CAAM,OAAA,CAAU,QAExD,MAAM,KAEN,MAAM,0CAEd,GAEA,SAAS,gBAAA,CAAiB,iBAAiB,OAAA,CAAQ,AAAA,IAC/C,EAAO,gBAAA,CAAiB,QAAS,iBAC7B,IAAM,EAAe,IAAI,CAAC,YAAA,CAAa,eACjC,EAAiB,CAAC,OAAQ,MAAO,UAAO,CAAC,KAAK,KAAA,CAAM,AAAgB,EAAhB,KAAK,MAAA,IAAc,AAE7E,CAAA,SAAS,cAAA,CAAe,gBAAgB,SAAA,CAAY,EACpD,SAAS,cAAA,CAAe,kBAAkB,SAAA,CAAY,EAElD,IAAiB,EACjB,SAAS,cAAA,CAAe,eAAe,SAAA,CAAY,WAEnD,AAAkB,SAAlB,GAA4B,AAAmB,QAAnB,GAC3B,AAAiB,QAAjB,GAA0B,AAAmB,YAAnB,GAC1B,AAAiB,YAAjB,GAA2B,AAAmB,SAAnB,GAE5B,IACA,SAAS,cAAA,CAAe,eAAe,SAAA,CAAY,EACnD,SAAS,cAAA,CAAe,eAAe,SAAA,CAAY,oBAEnD,MAAM,EAAc,EAAY,GAChC,EAAc,EACd,SAAS,cAAA,CAAe,eAAe,SAAA,CAAY,EACnD,SAAS,cAAA,CAAe,eAAe,SAAA,CAAY,gBAEnD,MAAM,IAEd,EACJ,GAgCA,4CAA4C;AAP5C,4BAA4B;AAC5B,iBACI,SAAS,cAAA,CAAe,iBAAiB,KAAA,CAAM,OAAA,CAAU,OACzD,SAAS,cAAA,CAAe,gBAAgB,KAAA,CAAM,OAAA,CAAU,OACxD,MAAM,GACV,G,4D","sources":["<anon>","main.js"],"sourcesContent":["let playerScore = 0;\nlet playerName = \"\";\nasync function fetchHighscores() {\n    try {\n        const response = await fetch(\"http://localhost:3000/highscores\");\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n        const data = await response.json();\n        const highscoreList = document.getElementById(\"highscoreList\");\n        highscoreList.innerHTML = \"\";\n        data.forEach((score)=>{\n            const li = document.createElement(\"li\");\n            li.textContent = `${score.name}: ${score.score}`;\n            highscoreList.appendChild(li);\n        });\n    } catch (error) {\n        console.error(\"Error fetching highscores:\", error);\n    }\n}\ndocument.getElementById(\"startGameBtn\").addEventListener(\"click\", async ()=>{\n    playerName = document.getElementById(\"playerName\").value;\n    if (playerName.trim() !== \"\") {\n        document.getElementById(\"playerNameDisplay\").textContent = playerName;\n        document.getElementById(\"startGameBtn\").style.display = \"none\";\n        document.getElementById(\"playerName\").style.display = \"none\";\n        document.getElementById(\"playerDisplay\").style.display = \"block\";\n        document.getElementById(\"gameElements\").style.display = \"block\";\n        await fetchHighscores();\n    } else alert(\"Ange ditt namn innan du startar spelet.\");\n});\ndocument.querySelectorAll(\"[data-choice]\").forEach((button)=>{\n    button.addEventListener(\"click\", async function() {\n        const playerChoice = this.getAttribute(\"data-choice\");\n        const computerChoice = [\n            \"Sten\",\n            \"Sax\",\n            \"P\\xe5se\"\n        ][Math.floor(Math.random() * 3)];\n        document.getElementById(\"playerChoice\").innerText = playerChoice;\n        document.getElementById(\"computerChoice\").innerText = computerChoice;\n        if (playerChoice === computerChoice) document.getElementById(\"roundWinner\").innerText = \"Oavgjort\";\n        else if (playerChoice === \"Sten\" && computerChoice === \"Sax\" || playerChoice === \"Sax\" && computerChoice === \"P\\xe5se\" || playerChoice === \"P\\xe5se\" && computerChoice === \"Sten\") {\n            playerScore++;\n            document.getElementById(\"playerScore\").innerText = playerScore;\n            document.getElementById(\"roundWinner\").innerText = \"Spelaren vinner\";\n        } else {\n            await saveHighscore(playerName, playerScore);\n            playerScore = 0;\n            document.getElementById(\"playerScore\").innerText = playerScore;\n            document.getElementById(\"roundWinner\").innerText = \"Datorn vinner\";\n            await fetchHighscores();\n        }\n    });\n});\nasync function saveHighscore(name, score) {\n    try {\n        const response = await fetch(\"http://localhost:3000/highscores\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name: name,\n                score: score\n            })\n        });\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error saving highscore:\", error);\n    }\n}\n// Initialize the game setup\nasync function init() {\n    document.getElementById(\"playerDisplay\").style.display = \"none\";\n    document.getElementById(\"gameElements\").style.display = \"none\";\n    await fetchHighscores();\n}\n// Call the initialize function on page load\ninit();\n\n//# sourceMappingURL=index.4bec37df.js.map\n","let playerScore = 0;\r\nlet playerName = '';\r\n\r\nasync function fetchHighscores() {\r\n    try {\r\n        const response = await fetch('http://localhost:3000/highscores');\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        const highscoreList = document.getElementById('highscoreList');\r\n        highscoreList.innerHTML = '';\r\n        \r\n        data.forEach(score => {\r\n            const li = document.createElement('li');\r\n            li.textContent = `${score.name}: ${score.score}`;\r\n            highscoreList.appendChild(li);\r\n        });\r\n    } catch (error) {\r\n        console.error('Error fetching highscores:', error);\r\n    }\r\n}\r\n\r\ndocument.getElementById('startGameBtn').addEventListener('click', async () => {\r\n    playerName = document.getElementById('playerName').value;\r\n    if (playerName.trim() !== \"\") {\r\n        document.getElementById('playerNameDisplay').textContent = playerName;\r\n        document.getElementById('startGameBtn').style.display = 'none';\r\n        document.getElementById('playerName').style.display = 'none';\r\n        document.getElementById('playerDisplay').style.display = 'block';\r\n        document.getElementById('gameElements').style.display = 'block';\r\n        \r\n        await fetchHighscores();\r\n    } else {\r\n        alert('Ange ditt namn innan du startar spelet.');\r\n    }\r\n});\r\n\r\ndocument.querySelectorAll('[data-choice]').forEach(button => {\r\n    button.addEventListener('click', async function() {\r\n        const playerChoice = this.getAttribute('data-choice');\r\n        const computerChoice = ['Sten', 'Sax', 'Påse'][Math.floor(Math.random() * 3)];\r\n\r\n        document.getElementById('playerChoice').innerText = playerChoice;\r\n        document.getElementById('computerChoice').innerText = computerChoice;\r\n\r\n        if (playerChoice === computerChoice) {\r\n            document.getElementById('roundWinner').innerText = 'Oavgjort';\r\n        } else if (\r\n            (playerChoice === 'Sten' && computerChoice === 'Sax') ||\r\n            (playerChoice === 'Sax' && computerChoice === 'Påse') ||\r\n            (playerChoice === 'Påse' && computerChoice === 'Sten')\r\n        ) {\r\n            playerScore++;\r\n            document.getElementById('playerScore').innerText = playerScore;\r\n            document.getElementById('roundWinner').innerText = 'Spelaren vinner';\r\n        } else {\r\n            await saveHighscore(playerName, playerScore);\r\n            playerScore = 0;\r\n            document.getElementById('playerScore').innerText = playerScore;\r\n            document.getElementById('roundWinner').innerText = 'Datorn vinner';\r\n            \r\n            await fetchHighscores();\r\n        }\r\n    });\r\n});\r\n\r\nasync function saveHighscore(name, score) {\r\n    try {\r\n        const response = await fetch('http://localhost:3000/highscores', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                score: score\r\n            })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error saving highscore:', error);\r\n    }\r\n}\r\n\r\n// Initialize the game setup\r\nasync function init() {\r\n    document.getElementById('playerDisplay').style.display = 'none';\r\n    document.getElementById('gameElements').style.display = 'none';\r\n    await fetchHighscores();\r\n}\r\n\r\n// Call the initialize function on page load\r\ninit();\r\n"],"names":["playerScore","playerName","fetchHighscores","response","fetch","ok","Error","status","data","json","highscoreList","document","getElementById","innerHTML","forEach","score","li","createElement","textContent","name","appendChild","error","console","saveHighscore","method","headers","body","JSON","stringify","addEventListener","value","trim","style","display","alert","querySelectorAll","button","playerChoice","getAttribute","computerChoice","Math","floor","random","innerText"],"version":3,"file":"index.4bec37df.js.map"}